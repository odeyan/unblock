/unblocked-games
  /index.html
  /games
    /game1
      index.html
  /style.css
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Unblocked Games</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <header>
    <h1>Unblocked Games Hub</h1>
    <nav>
      <a href="#">Home</a>
      <a href="#games">Games</a>
    </nav>
  </header>
  
  <main>
    <section id="games">
      <h2>Featured Games</h2>
      <div class="game">
        <h3>Game 1: Pong</h3>
        <iframe src="games/game1/index.html" frameborder="0"></iframe>
      </div>
    </section>
  </main>

  <footer>
    <p>&copy; 2024 Unblocked Games Hub</p>
  </footer>
</body>
</html>
body {
  font-family: Arial, sans-serif;
  background-color: #f4f4f4;
  margin: 0;
  padding: 0;
}

header {
  background-color: #333;
  color: #fff;
  padding: 1rem;
  text-align: center;
}

header nav a {
  color: #fff;
  margin: 0 10px;
  text-decoration: none;
}

main {
  padding: 20px;
}

.game {
  margin: 20px 0;
}

iframe {
  width: 100%;
  height: 500px;
  border: 1px solid #ccc;
}

footer {
  background-color: #333;
  color: #fff;
  text-align: center;
  padding: 10px 0;
  position: absolute;
  width: 100%;
  bottom: 0;
}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pong Game</title>
  <style>
    canvas { background: #000; display: block; margin: 0 auto; }
  </style>
</head>
<body>
  <canvas id="pong" width="600" height="400"></canvas>

  <script>
    const canvas = document.getElementById('pong');
    const ctx = canvas.getContext('2d');

    // Paddle dimensions
    const paddleWidth = 10, paddleHeight = 100;
    const ballSize = 10;

    // Player position
    let playerY = (canvas.height - paddleHeight) / 2;
    let computerY = (canvas.height - paddleHeight) / 2;
    let ballX = canvas.width / 2, ballY = canvas.height / 2;
    let ballSpeedX = 4, ballSpeedY = 2;

    // Draw everything
    function draw() {
      // Clear the canvas
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // Draw paddles
      ctx.fillStyle = 'white';
      ctx.fillRect(0, playerY, paddleWidth, paddleHeight); // Player
      ctx.fillRect(canvas.width - paddleWidth, computerY, paddleWidth, paddleHeight); // Computer

      // Draw ball
      ctx.fillRect(ballX - ballSize / 2, ballY - ballSize / 2, ballSize, ballSize);
    }

    // Update game
    function update() {
      ballX += ballSpeedX;
      ballY += ballSpeedY;

      // Ball bouncing off the top and bottom
      if (ballY <= 0 || ballY >= canvas.height) {
        ballSpeedY = -ballSpeedY;
      }

      // Ball bouncing off the paddles
      if (ballX <= paddleWidth && ballY >= playerY && ballY <= playerY + paddleHeight) {
        ballSpeedX = -ballSpeedX;
      }

      if (ballX >= canvas.width - paddleWidth && ballY >= computerY && ballY <= computerY + paddleHeight) {
        ballSpeedX = -ballSpeedX;
      }

      // Ball out of bounds
      if (ballX < 0 || ballX > canvas.width) {
        ballX = canvas.width / 2;
        ballY = canvas.height / 2;
      }

      // Simple AI for computer paddle
      computerY += (ballY - (computerY + paddleHeight / 2)) * 0.05;
    }

    function gameLoop() {
      update();
      draw();
      requestAnimationFrame(gameLoop);
    }

    gameLoop();
  </script>
</body>
</html>
